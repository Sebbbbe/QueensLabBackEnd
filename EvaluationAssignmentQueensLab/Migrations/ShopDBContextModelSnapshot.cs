// <auto-generated />
using System;
using EvaluationAssignmentQueensLab;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EvaluationAssignmentQueensLab.Migrations
{
    [DbContext(typeof(ShopDBContext))]
    partial class ShopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.EnterExit", b =>
                {
                    b.Property<Guid>("EnterExitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VisitorID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EnterExitID");

                    b.ToTable("EnterExit");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Section", b =>
                {
                    b.Property<Guid>("SectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SectionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("VisitorAmount")
                        .HasColumnType("int");

                    b.HasKey("SectionID");

                    b.HasIndex("ShopID");

                    b.ToTable("sections");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Shop", b =>
                {
                    b.Property<Guid>("ShopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopID");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Visitor", b =>
                {
                    b.Property<Guid>("VisitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EnterExitID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SectionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("VisitorEntered")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisitorID");

                    b.HasIndex("EnterExitID");

                    b.HasIndex("SectionID");

                    b.HasIndex("ShopID");

                    b.ToTable("visitors");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Section", b =>
                {
                    b.HasOne("EvaluationAssignmentQueensLab.Models.Shop", "Shop")
                        .WithMany("Sections")
                        .HasForeignKey("ShopID");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Visitor", b =>
                {
                    b.HasOne("EvaluationAssignmentQueensLab.Models.EnterExit", "EnterExit")
                        .WithMany("Visitors")
                        .HasForeignKey("EnterExitID");

                    b.HasOne("EvaluationAssignmentQueensLab.Models.Section", "Section")
                        .WithMany("Visitors")
                        .HasForeignKey("SectionID");

                    b.HasOne("EvaluationAssignmentQueensLab.Models.Shop", "Shop")
                        .WithMany("Visitors")
                        .HasForeignKey("ShopID");

                    b.Navigation("EnterExit");

                    b.Navigation("Section");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.EnterExit", b =>
                {
                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Section", b =>
                {
                    b.Navigation("Visitors");
                });

            modelBuilder.Entity("EvaluationAssignmentQueensLab.Models.Shop", b =>
                {
                    b.Navigation("Sections");

                    b.Navigation("Visitors");
                });
#pragma warning restore 612, 618
        }
    }
}
